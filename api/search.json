[{"id":"99d3803d2ba14375937b06e7a1f36b52","title":"单点登录","content":"单点登录\nSSO ：Single Sign On，即：单点登录\n单点登录表现为：在集群或分布式系统中，客户端在其中的某1个服务器登录，后续的请求被分配到其它服务器处理时，其它服务器也能识别用户的身份。\n单点登录的实现方案有：\n\n\n共享Session\n把所有客户端的Session数据存储到专门的服务器上，其它任何服务器需要识别客户端身份时，都从这个专门的服务器上去查找、读取Session数据\n缺点：Session的有效期不宜过长\n优点：编码简单，读取Session数据基本上没有额外牺牲性能\n\n\nToken\n当某客户端登录成功，服务器端将响应Token到客户端，在后续的访问中，客户端自行携带Token数据来访问任何服务器，且任何服务器都具备解析此Token的功能，即可识别客户端的身份\nJWT（JSON Web Token）也是Token的一种\n缺点：编写代码略难，需要频繁解析JWT，需要牺牲一部分性能来进行解析\n优点：可以长时间有效\n\n\n\n如何实现SSO目前，在csmall-passport项目中已经现实了认证与授权，只要客户端能携带有效的JWT，则服务器端可以识别客户端的身份！\n在csmall-product项目中，只需要添加Spring Security框架的依赖项，并添加认证相关代码，就可以实现“客户端在csmall-passport登录后，在csmall-product上也可以识别用户的身份”！\n需要从csmall-passport中复制到csmall-product中的代码有：\n\n复制相关依赖项\n\nspring-boot-starter-security\njjwt\nfastjson\n\n\n复制application-dev.yml中关于JWT的自定义配置\n\nLoginPrincipal\n\nServiceCode（更新文件，在passport中添加了一些新的业务状态码，在product中也将需要使用到）\n\nJwtAuthorizationFilter\n\nSecurityConfiguration\n\n\n删除PasswordEncoder的@Bean方法\n删除AuthenticationManager的@Bean方法\n删除configurer()方法中“白名单”中的 &quot;/admins/login&quot; 路径\n\n\nGlobalExceptionHandler（更新文件，处理“无操作权限”相关异常）\n\n\n在前端项目中，保证除了登录的每个请求都添加了请求头中的JWT即可。\n本项目基于Spring Security和JWT实现了SSO（单点登录）。\n","slug":"单点登录","date":"2022-12-06T15:30:00.000Z","categories_index":"","tags_index":"必会技能","author_index":"余有光"},{"id":"82381b80c937780767578a231f4c2205","title":"常用软件下载与安装使用","content":"一、Nacos1、Nacos 下载https://github.com/alibaba/nacos/releases/download/1.4.3/nacos-server-1.4.3.zip\n2、安装启动Nacos\n我们下载了Nacos软件\n将压缩包解压(注意不要有中文路径或空格)\n​    \n打开解压得到的文件夹后打卡bin目录会有如下内容\n\nstartup.cmd是windows系统启动Nacos的命令\nshutdown.cmd是windows系统停止Nacos的命令\n\n\n\n\n\n\n\n\n\n.sh结尾的文件是linux和mac系统的启动和停止文件\n启动Nacos不能直接双击startup.cmd\n\n\n而需要打开dos窗口来执行\nWin+R输入cmd\n\n\n启动命令中 standalone是表示本次启动以单机模式运行\n如果不指定会默认以集群模式运行,无法完成功能\nstartup.cmd -m standalone\n\n如果运行成功会显示8848端口\n打开浏览器输入地址\nhttp://localhost:8848/nacos\n\n如果首次访问没有响应,可以尝试从新解压和运行,再访问\n登录系统\n用户名密码都是nacos\n进入后会看到列表后台\n注意不要关闭doc窗口,一旦关闭,nacos就停止了\n二、Seata1、下载Seatahttps://github.com/seata/seata/releases\nhttps://github.com/seata/seata/releases/download/v1.4.2/seata-server-1.4.2.zip\n2、启动Seata\n\n启动所有4个服务\n运行knife4j测试\n测试business模块,如果能够运行出现成功或出现异常的提示信息\n并在数据库中呈现正常运行或回滚的效果,表示一切正常\n在windows系统中运行seata可能出现不稳定的情况,重启seata即可解决\n三、Sentinel1、Sentinel下载地址https://github.com/alibaba/Sentinel/releases\n可以直接运行发送给大家的bat文件\n\n\n2、Sentinel启动复制Sentinel到硬盘,然后直接双击start-sentinel.bat即可\n四、Redis1、Redis下载doc.canglaoshi.org\n\n2、Redis的解压安装和运行将我们下载的压缩包解压后,得到内容如图\n\nredis-server.exe\\redis-start.bat这两个文件双击其中任何一个都可以达到启动Redis的效果\n但是这个打开的界面一旦关闭Redis就停止了\n上面的启动方式每次开机都要运行,而且打开的窗口如果不小心关掉了Redis就停止了\n比较麻烦,我们希望Redis能够像mysql一样,每次开机自动启动\n\nservice-installing.bat        双击能够将Redis进行安装,到当前系统中\n\nservice-start.bat               双击能够启动当前Redis的服务,默认每次开机                    \n​                                            自动启动\n\nservice-stop.bat                停止服务\n\nservice-uninstalling.bat   卸载程序\n\n\n我们只需要运行1,2两个文件\n就可以实现每次开机自动启动Redis的效果\n我们可以启动redis-cli.exe进行测试  \nRedis默认端口号:6379\n测试方法,在redis-cli.exe运行的窗口中输入指令”info”\n观察输出结果\n五、Elasticsearch1、Elasticsearch软件下载doc.canglaoshi.org\n\n2、Elasticsearch的启动官方下载链接\nhttps://www.elastic.co/cn/downloads/past-releases#elasticsearch\n将下载的280兆的压缩包解压\n进入压缩包后得到如下bin目录中的内容\n\n双击运行elasticsearch.bat文件,可以启动ES\n\ndos窗口不能关,一关ES就停止工作了\nES没有支持开机自动启动的功能,所以每次开机需要ES时只能手动启动\n怎么证明我们的ES正常工作呢\n可以打开浏览器输入地址\nlocalhost:9200\n\nmac系统启动\ntar -xvf elasticsearch-7.6.2-darwin-x86_64.tar.gz \ncd elasticsearch-7.6.2&#x2F;bin \n.&#x2F;elasticsearch\n\nlinux:\ntar -xvf elasticsearch-7.6.2-linux-x86_64.tar.gz\ncd elasticsearch-7.6.2&#x2F;bin\n.&#x2F;elasticsearch\n\n","slug":"my-first-blog","date":"2022-12-04T04:59:50.000Z","categories_index":"","tags_index":"软件安装及使用","author_index":"余有光"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-12-04T04:23:08.190Z","categories_index":"","tags_index":"","author_index":"余有光"}]